pipeline {
    agent any

    environment {
        CI = 'true'
        NEXUS_URL = 'http://nexus:8081'
        NEXUS_USER = 'jenkins'
        NEXUS_PASS = 'jenkins123'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/nun3/playwrightCICD.git'
            }
        }

        stage('Install Node.js (Skip if exists)') {
            steps {
                sh '''
                    if ! command -v node &> /dev/null; then
                        echo "Instalando Node.js 18..."
                        curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
                        apt-get update && apt-get install -y nodejs
                    else
                        echo "Node.js jÃ¡ instalado: $(node --version)"
                    fi
                '''
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm ci'
            }
        }

        stage('Install Playwright Browsers (Chrome only)') {
            steps {
                sh '''
                    if [ ! -d "$HOME/.cache/ms-playwright" ]; then
                        echo "Instalando apenas Chrome..."
                        npx playwright install chromium --with-deps
                    else
                        echo "Browsers jÃ¡ instalados, pulando instalaÃ§Ã£o"
                    fi
                '''
            }
        }

        stage('Run Tests (Chrome only)') {
            steps {
                sh 'npx playwright test --project=chromium'
                allure includeProperties: false, jdk: '', results: [[path: 'allure-results']]
            }
        }

        stage('Upload Evidence to Nexus') {
            steps {
                script {
                    def timestamp = new Date().format('yyyy-MM-dd_HH-mm-ss')
                    def buildNumber = env.BUILD_NUMBER
                    
                    sh '''
                        echo "ðŸ“¤ Fazendo upload das evidÃªncias para o Nexus..."
                        
                        # Criar diretÃ³rio temporÃ¡rio
                        mkdir -p /tmp/evidence-upload
                        
                        # Copiar evidÃªncias
                        cp -r test-results/screenshots /tmp/evidence-upload/ 2>/dev/null || echo "Nenhuma screenshot encontrada"
                        cp -r test-results/videos /tmp/evidence-upload/ 2>/dev/null || echo "Nenhum vÃ­deo encontrado"
                        cp -r allure-results /tmp/evidence-upload/ 2>/dev/null || echo "Nenhum resultado Allure encontrado"
                        
                        # Criar arquivo de informaÃ§Ãµes do build
                        cat > /tmp/evidence-upload/build-info.txt << EOF
Build Number: ${BUILD_NUMBER}
Timestamp: ${timestamp}
Branch: ${GIT_BRANCH}
Commit: ${GIT_COMMIT}
Jenkins URL: ${BUILD_URL}
EOF
                        
                        # Fazer upload para Nexus
                        cd /tmp/evidence-upload
                        tar -czf evidence-${BUILD_NUMBER}-${timestamp}.tar.gz *
                        
                        # Upload usando curl
                        curl -u ${NEXUS_USER}:${NEXUS_PASS} \
                             --upload-file evidence-${BUILD_NUMBER}-${timestamp}.tar.gz \
                             ${NEXUS_URL}/repository/playwright-evidence/evidence-${BUILD_NUMBER}-${timestamp}.tar.gz
                        
                        echo "âœ… Upload concluÃ­do!"
                        echo "ðŸ”— URL: ${NEXUS_URL}/repository/playwright-evidence/evidence-${BUILD_NUMBER}-${timestamp}.tar.gz"
                    '''
                }
            }
        }

        stage('Upload Allure Report to Nexus') {
            steps {
                script {
                    def timestamp = new Date().format('yyyy-MM-dd_HH-mm-ss')
                    def buildNumber = env.BUILD_NUMBER
                    
                    sh '''
                        echo "ðŸ“¤ Fazendo upload do relatÃ³rio Allure para o Nexus..."
                        
                        # Criar diretÃ³rio temporÃ¡rio para relatÃ³rios
                        mkdir -p /tmp/reports-upload
                        
                        # Copiar relatÃ³rio Allure gerado pelo Jenkins
                        cp -r allure-report /tmp/reports-upload/
                        cp -r test-results /tmp/reports-upload/ 2>/dev/null || echo "Nenhum resultado de teste encontrado"
                        cp -r allure-results /tmp/reports-upload/ 2>/dev/null || echo "Nenhum resultado Allure encontrado"
                        
                        # Criar arquivo de informaÃ§Ãµes do build
                        cat > /tmp/reports-upload/build-info.txt << EOF
Build Number: ${BUILD_NUMBER}
Timestamp: ${timestamp}
Branch: ${GIT_BRANCH}
Commit: ${GIT_COMMIT}
Jenkins URL: ${BUILD_URL}
Allure Report URL: ${NEXUS_URL}/repository/playwright-reports/build-${BUILD_NUMBER}/index.html
EOF
                        
                        # Fazer upload para Nexus (estrutura de pastas)
                        cd /tmp/reports-upload
                        
                        # Upload do relatÃ³rio Allure como pasta
                        echo "Fazendo upload do relatÃ³rio Allure..."
                        cd allure-report
                        for file in $(find . -type f); do
                            curl -u ${NEXUS_USER}:${NEXUS_PASS} \
                                 --upload-file "$file" \
                                 ${NEXUS_URL}/repository/playwright-reports/build-${BUILD_NUMBER}/"$file"
                        done
                        
                        # Upload dos outros arquivos
                        cd ..
                        tar -czf reports-${BUILD_NUMBER}-${timestamp}.tar.gz test-results allure-results build-info.txt
                        curl -u ${NEXUS_USER}:${NEXUS_PASS} \
                             --upload-file reports-${BUILD_NUMBER}-${timestamp}.tar.gz \
                             ${NEXUS_URL}/repository/playwright-reports/reports-${BUILD_NUMBER}-${timestamp}.tar.gz
                        
                        echo "âœ… Upload de relatÃ³rios concluÃ­do!"
                        echo "ðŸ”— RelatÃ³rio Allure: ${NEXUS_URL}/repository/playwright-reports/build-${BUILD_NUMBER}/index.html"
                        echo "ðŸ”— Arquivos compactados: ${NEXUS_URL}/repository/playwright-reports/reports-${BUILD_NUMBER}-${timestamp}.tar.gz"
                    '''
                }
            }
        }
    }

    post {
        always {
            // Limpar arquivos temporÃ¡rios
            sh 'rm -rf /tmp/evidence-upload /tmp/reports-upload'
        }
    }
}
