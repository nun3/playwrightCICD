pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/nun3/playwrightCICD.git'
            }
        }

        stage('Install Node.js (Skip if exists)') {
            steps {
                sh '''
                    if ! command -v node &> /dev/null; then
                        echo "Instalando Node.js 18..."
                        curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
                        apt-get update && apt-get install -y nodejs
                    else
                        echo "Node.js j√° instalado: $(node --version)"
                    fi
                '''
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm ci'
            }
        }

        stage('Install Playwright Browsers (Chrome only)') {
            steps {
                sh '''
                    if [ ! -d "$HOME/.cache/ms-playwright" ]; then
                        echo "Instalando apenas Chrome..."
                        npx playwright install chromium --with-deps
                    else
                        echo "Browsers j√° instalados, pulando instala√ß√£o"
                    fi
                '''
            }
        }

        stage('Run Tests (Chrome only)') {
            steps {
                sh 'npx playwright test --project=chromium --reporter=html'
            }
        }

        stage('Generate Test Report') {
            steps {
                sh '''
                    # Gerar relat√≥rio HTML se n√£o foi gerado automaticamente
                    if [ ! -f "playwright-report/index.html" ]; then
                        echo "Gerando relat√≥rio HTML..."
                        npx playwright show-report --host 0.0.0.0 --port 8081 &
                        sleep 5
                        curl -s http://localhost:8081 > playwright-report/index.html || echo "Relat√≥rio n√£o p√¥de ser gerado"
                    fi
                    
                    # Listar arquivos do relat√≥rio
                    echo "Arquivos do relat√≥rio:"
                    ls -la playwright-report/ || echo "Diret√≥rio playwright-report n√£o encontrado"
                '''
            }
        }
    }

    post {
        always {
            // Arquivos de evid√™ncia (screenshots, traces)
            archiveArtifacts artifacts: 'test-results/**/*', allowEmptyArchive: true
            
            // Relat√≥rio HTML
            archiveArtifacts artifacts: 'playwright-report/**/*', allowEmptyArchive: true
            
            // Criar link para o relat√≥rio
            script {
                if (fileExists('playwright-report/index.html')) {
                    echo "‚úÖ Relat√≥rio HTML gerado com sucesso!"
                    echo "üìä Acesse o relat√≥rio nos artefatos do build"
                } else {
                    echo "‚ö†Ô∏è Relat√≥rio HTML n√£o foi gerado"
                }
            }
        }
        
        failure {
            echo 'Pipeline falhou! Verifique os relat√≥rios para mais detalhes.'
        }
        
        success {
            echo 'Pipeline executado com sucesso!'
            echo 'üìä Relat√≥rio dispon√≠vel nos artefatos do build'
        }
    }
}
