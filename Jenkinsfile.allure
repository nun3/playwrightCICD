pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/nun3/playwrightCICD.git'
            }
        }

        stage('Install Node.js (Skip if exists)') {
            steps {
                sh '''
                    if ! command -v node &> /dev/null; then
                        echo "Instalando Node.js 18..."
                        curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
                        apt-get update && apt-get install -y nodejs
                    else
                        echo "Node.js j치 instalado: $(node --version)"
                    fi
                '''
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm ci'
            }
        }

        stage('Install Playwright Browsers (Chrome only)') {
            steps {
                sh '''
                    if [ ! -d "$HOME/.cache/ms-playwright" ]; then
                        echo "Instalando apenas Chrome..."
                        npx playwright install chromium --with-deps
                    else
                        echo "Browsers j치 instalados, pulando instala칞칚o"
                    fi
                '''
            }
        }

        stage('Run Tests with Allure') {
            steps {
                sh 'npx playwright test --project=chromium --reporter=allure'
            }
        }
    }

    post {
        always {
            // Gerar relat칩rio Allure
            allure([
                includeProperties: false,
                jdk: '',
                properties: [],
                reportBuildPolicy: 'ALWAYS',
                results: [[path: 'allure-results']]
            ])
            
            // Arquivos de evid칡ncia
            archiveArtifacts artifacts: 'test-results/**/*', allowEmptyArchive: true
            archiveArtifacts artifacts: 'allure-results/**/*', allowEmptyArchive: true
        }
        
        failure {
            echo 'Pipeline falhou! Verifique o relat칩rio Allure para mais detalhes.'
        }
        
        success {
            echo 'Pipeline executado com sucesso!'
            echo '游늵 Relat칩rio Allure dispon칤vel na p치gina do build'
        }
    }
}
