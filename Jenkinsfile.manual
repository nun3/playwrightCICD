pipeline {
   agent any
   
   options {
      timeout(time: 60, unit: 'MINUTES')
   }
   
   environment {
      CI = 'true'
   }
   
   stages {
      stage('Clean Workspace') {
         steps {
            cleanWs()
         }
      }
      
      stage('Clone Repository') {
         steps {
            sh '''
               git clone https://github.com/nun3/playwrightCICD.git .
               git checkout main
               ls -la
            '''
         }
      }
      
      stage('Verify Files') {
         steps {
            sh '''
               echo "Verificando arquivos..."
               ls -la
               echo "Conteúdo do package.json:"
               cat package.json
            '''
         }
      }
      
      stage('Install Dependencies') {
         steps {
            sh 'npm ci'
         }
      }
      
      stage('Install Playwright Browsers') {
         steps {
            sh 'npx playwright install --with-deps'
         }
      }
      
      stage('Run Playwright Tests') {
         steps {
            sh 'npx playwright test'
         }
      }
   }
   
   post {
      always {
         script {
            if (fileExists('playwright-report/index.html')) {
               publishHTML([
                  allowMissing: false,
                  alwaysLinkToLastBuild: true,
                  keepAll: true,
                  reportDir: 'playwright-report',
                  reportFiles: 'index.html',
                  reportName: 'Playwright Test Report'
               ])
            }
         }
         
         // Arquivos de evidência (screenshots, traces)
         if (fileExists('test-results')) {
            archiveArtifacts artifacts: 'test-results/**/*', allowEmptyArchive: true
         }
      }
      
      failure {
         echo 'Pipeline falhou! Verifique os relatórios para mais detalhes.'
         sh 'ls -la test-results/ || echo "Nenhum resultado de teste encontrado"'
      }
      
      success {
         echo 'Pipeline executado com sucesso!'
      }
   }
}
